function chpwd_profiles() {
    local profile context
    local -i reexecute

    context=":chpwd:profiles:$PWD"
    zstyle -s "$context" profile profile || profile='default'
    zstyle -T "$context" re-execute && reexecute=1 || reexecute=0

    if (( ${+parameters[CHPWD_PROFILE]} == 0 )); then
        typeset -g CHPWD_PROFILE
        local CHPWD_PROFILES_INIT=1
        (( ${+functions[chpwd_profiles_init]} )) && chpwd_profiles_init
    elif [[ $profile != $CHPWD_PROFILE ]]; then
        (( ${+functions[chpwd_leave_profile_$CHPWD_PROFILE]} )) \
            && chpwd_leave_profile_${CHPWD_PROFILE}
    fi
    if (( reexecute )) || [[ $profile != $CHPWD_PROFILE ]]; then
        (( ${+functions[chpwd_profile_$profile]} )) && chpwd_profile_${profile}
    fi

    CHPWD_PROFILE="${profile}"
    return 0
}

# Add the chpwd_profiles() function to the list called by chpwd()!
chpwd_functions=( ${chpwd_functions} chpwd_profiles )

######## Directory Profiles -----------------------
zstyle ":chpwd:profiles:${default_go_path}(|/|/*)" profile go
zstyle ":chpwd:profiles:${HOME}/go-code(|/|/*)" profile monorepo

# we set both so if you are already in a directory we have binary
# paths for both profiles to start. /shrug
path=(${GOBIN} ${HOME}/go-code/bin $path)

# this allows duplicates to get removed when adding to the path.
typeset -U PATH

chpwd_profile_go() {
	[[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
	print $fg[green] "Switching to profile: $profile"

	export GOPATH="$default_go_path"
	export GOBIN="$GOPATH/bin"
    path=(${GOBIN} $path)

    print -D $fg[default] "GOPATH: " "${GOPATH}"
    print -D $fg[default] "GOBIN:  " "${GOBIN}"
}

chpwd_profile_monorepo() {
    [[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
    print $fg[green] "Switching to profile: $profile"

    export GOPATH="$HOME/go-code"
    export GOBIN="$GOPATH/bin"
    path=(${GOBIN} $path)

    print -D $fg[default] "GOPATH: " "${GOPATH}"
    print -D $fg[default] "GOBIN:  " "${GOBIN}"
}

# ---------------------------------------------------

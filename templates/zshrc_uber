
export VAGRANT_DEFAULT_PROVIDER=aws

# custom bean setup for uber dev env
export DEFAULT_VIRTUAL_ENV_DIR=env

######## Alias Section ############################
alias uaws="aws-credential-client -x -u \${UBER_OWNER} -t push -r \${UBER_AWS_ROLE:-engineering}"

######## Directory Profiles -----------------------
zstyle ":chpwd:profiles:${HOME}/gocode(|/|/*)" profile go
zstyle ":chpwd:profiles:${HOME}/go-code(|/|/*)" profile monorepo

# we set both so if you are already in a directory we have binary
# paths for both profiles to start. /shrug
path=(${GOBIN} ${HOME}/go-code/bin $path)

# this allows duplicates to get removed when adding to the path.
typeset -U PATH

chpwd_profile_go() {
	[[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
	print $fg[green] "Switching to profile: $profile"

	export GOPATH="$HOME/gocode"
	export GOBIN="$GOPATH/bin"
    path=(${GOBIN} $path)

    print -D $fg[default] "GOPATH: " "${GOPATH}"
    print -D $fg[default] "GOBIN:  " "${GOBIN}"
}

chpwd_profile_monorepo() {
    [[ ${profile} == ${CHPWD_PROFILE} ]] && return 1
    print $fg[green] "Switching to profile: $profile"

    export GOPATH="$HOME/go-code"
    export GOBIN="$GOPATH/bin"
    path=(${GOBIN} $path)

    print -D $fg[default] "GOPATH: " "${GOPATH}"
    print -D $fg[default] "GOBIN:  " "${GOBIN}"
}

# ---------------------------------------------------

########### Custom quick functions
uuh () {
    echo | $(which update-uber-home.sh)
}

readonly CRANE_PROJECT=crane-sandbox
readonly crane_proxy="${HOME}/go-code/src/code.uber.internal/infra/crane-exp.git/scripts/crane-ssh-common.sh"
if [ -f ${crane_proxy} ]; then
    source "${crane_proxy}"
fi

upass () {
   lpass show --password --clip 'Uber Work'
}

spass () {
   lpass show --password --clip 'Uber Sudo'
}
# ---------------------------------------------------
